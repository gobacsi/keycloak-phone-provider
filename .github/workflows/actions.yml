name: 'build-test'
on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps: 
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin' 
          java-version: '17'
      - name: Build with Maven
        run: mvn clean package -Dmaven.test.skip="true"
      - name: Docker ECR
        # You may pin to the exact commit or the version.
        # uses: appleboy/docker-ecr-action@174bc7ab545bf5c4f4492240c4d839a987643559
        uses: appleboy/docker-ecr-action@v0.0.3
        with:
          access_key: ${{ secrets.AWS_ACCESS_KEY }}
          secret_key: ${{ secrets.AWS_SECRET_KEY }}
          registry: ${{ vars.REGISTRY_URL }}
          region: ap-southeast-1
          repo: ${{ github.event.repository.name }}
          tags: ${{ github.sha }}
          dockerfile: target/Dockerfile
  deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: build
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: ssh pipelines
        uses: cross-the-world/ssh-pipeline@master
        env:
          WELCOME: "ssh pipeline"
        with:
          host: ${{ secrets.SSH_HOST }}
          user: ${{ vars.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          connect_timeout: 10s
          script: |
            IMAGE=${{ vars.REGISTRY_URL }}/${{ github.event.repository.name }}:${{ github.sha }}
            aws ecr get-login-password | docker login --username AWS --password-stdin ${{ vars.REGISTRY_URL }}
            aws s3api get-object --bucket gobacsi-env --key ${{ vars.S3_ENV_PATH }} ${{ vars.REMOTE_ENV }}
            docker rm -f dev-keycloak
            docker run \
              --env-file ${{ vars.REMOTE_ENV }} \
              --name dev-keycloak \
              -p 8080:8080 \
              -d "${IMAGE}" start-dev \
                --spi-phone-default-service=dummy \
                --spi-phone-default-gobacsi-phone-default-region=VN \
                --spi-phone-default-token-expires-in=${{vars.OTP_TTL_SECOND}} \
                --spi-phone-default-source-hour-maximum=${{vars.OTP_IP_LIMIT_PER_HOUR}} \
                --spi-phone-default-target-hour-maximum=${{vars.OTP_PHONE_LIMIT_PER_HOUR}} \
